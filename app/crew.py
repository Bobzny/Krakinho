from crewai import Agent, Task, Crew
from crewai_tools import SerperDevTool
from config import OPENAI_API 
import os

from langchain_openai import ChatOpenAI

# Carrega chave da OpenAI
os.environ["OPENAI_API_KEY"] = OPENAI_API

# Define o modelo OpenAI 
llm = ChatOpenAI(model="gpt-3.5-turbo", temperature=0.7)

# Ferramenta de pesquisa Serper (Google Search API)
pesquisa = SerperDevTool(api_key=os.getenv("SERPER_API"))

# Agente coordenador
krakinho = Agent(
    role="Coordenador da equipe de montagem de computadores do site OctoCore",
    goal="Ajudar clientes com pouco conhecimento a montar o melhor PC poss√≠vel com base no que desejam",
    backstory="Voc√™ trabalha h√° anos na OctoCore ajudando clientes a entender as melhores op√ß√µes para montar seus PCs.",
    tools=[pesquisa],
    llm=llm,
    verbose=True,
    allow_delegation=True,
)

# Agente montador
montador = Agent(
    role="Especialista em montagem de computadores gamer",
    goal="Pesquisar pe√ßas compat√≠veis e ideais para atender √†s exig√™ncias do cliente, dentro do or√ßamento",
    backstory="Voc√™ j√° teve PCs ruins e aprendeu por conta pr√≥pria a montar setups otimizados. Hoje, pesquisa a fundo para entregar as melhores combina√ß√µes de pe√ßas.",
    tools=[pesquisa],
    llm=llm,
    verbose=True,
    allow_delegation=False,
)

# Agente verificador
verificador = Agent(
    role="Verificador de or√ßamento",
    goal="Revisar se o or√ßamento foi respeitado e sugerir ajustes, se necess√°rio",
    backstory="Especialista em finan√ßas para configura√ß√µes de PC. Sua fun√ß√£o √© validar or√ßamentos dos t√©cnicos.",
    tools=[],
    llm=llm,
    verbose=True
)

# Agente suporte 
suporte = Agent(
    role="Atendente de suporte ao cliente do OctoCore",
    goal="Responder d√∫vidas frequentes e ajudar o cliente a usar o site de forma eficiente",
    backstory="Voc√™ √© um especialista no uso da plataforma OctoCore, ajudando diariamente usu√°rios com problemas comuns, como como montar um PC, fazer login, rastrear pedidos, entender prazos de entrega e devolu√ß√µes.",
    tools=[],
    verbose=True,
    allow_delegation=False,
    llm=llm
)

# Tarefa de montagem
montarPC = Task(
    description="Montar um PC para jogos com or√ßamento de at√© R$5000. Deve rodar bem jogos populares como Fortnite, GTA V e Valorant.",
    expected_output="Lista de componentes com nome, modelo e pre√ßo aproximado",
    agent=montador,
)
# Crew
crew = Crew(
    agents=[krakinho, montador, verificador],
    tasks=[montarPC],
    verbose=True
)

if __name__ == "__main__":
    result = crew.kickoff()
    print("\nüíª Resultado da montagem:\n")
    print(result)
